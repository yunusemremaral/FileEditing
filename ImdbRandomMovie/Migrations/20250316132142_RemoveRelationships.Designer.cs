// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ImdbRandomMovie.Migrations
{
    [DbContext(typeof(ImdbContext))]
    [Migration("20250316132142_RemoveRelationships")]
    partial class RemoveRelationships
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ImdbRandomMovie.Entity.NameBasicsFiltered", b =>
                {
                    b.Property<string>("Nconst")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BirthYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeathYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KnownForTitles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryProfession")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Nconst");

                    b.ToTable("name.basics.filtered", "dbo");
                });

            modelBuilder.Entity("ImdbRandomMovie.Entity.TitleAkasFiltered", b =>
                {
                    b.Property<string>("Tconst")
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte?>("Ordering")
                        .HasColumnType("tinyint");

                    b.Property<string>("Attributes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsOriginalTitle")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Types")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Tconst", "Ordering");

                    b.ToTable("title.akas.filtered", "dbo");
                });

            modelBuilder.Entity("ImdbRandomMovie.Entity.TitleBasicsFiltered", b =>
                {
                    b.Property<string>("Tconst")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Genres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("IsAdult")
                        .HasColumnType("tinyint");

                    b.Property<string>("OriginalTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuntimeMinutes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("StartYear")
                        .HasColumnType("smallint");

                    b.HasKey("Tconst");

                    b.ToTable("title.basics.filtered", "dbo");
                });

            modelBuilder.Entity("ImdbRandomMovie.Entity.TitleCrewFiltered", b =>
                {
                    b.Property<string>("Tconst")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Directors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Writers")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Tconst");

                    b.ToTable("title.crew.filtered", "dbo");
                });

            modelBuilder.Entity("ImdbRandomMovie.Entity.TitleRatingsFiltered", b =>
                {
                    b.Property<string>("Tconst")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("AverageRating")
                        .HasColumnType("float");

                    b.Property<int?>("NumVotes")
                        .HasColumnType("int");

                    b.HasKey("Tconst");

                    b.ToTable("title.ratings.filtered", "dbo");
                });
#pragma warning restore 612, 618
        }
    }
}
